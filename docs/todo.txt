# considering -n, -q, -r options only
# pause after every functions and commits
# follow TDD
# start working by creating file tail.js , test directory and src directory
# make package.json
# use thesuarus to name variables and functions

[v 0.1] only one option '-n' with a single file and std input 
  node tail.js  docs/num.txt -> gives last 10 lines
  node tail.js -n2 docs/num.txt -> gives last 2 lines
  node tail.js <docs/num.txt-> gives last 10 lines of std input
  node tail.js -n2 <docs/num.txt-> gives last 2 lines of std input
  node tail.js -q docs/num.txt-> gives error text becuase no file existing 
    such as -q
  node tail.js -n2 -n3 docs/num.txt-> gives last 2 lines
  
--- done ---

[v 0.2] Access standard input
  # get rid of magic numbers
  use read stream for file reading
  only main should know about stream
  pass display function from the main as a parameter
  testing of proxy main properly becuase it may not return anything
  how to mock events in test
  introduce using sinon in test
  # only the function which takes the file content or stdin should have the right to 
    call the completion callback
  handle error in a single place
  write class for creating stream
  include that class into jsTool
  # try to write class for parsing, becuase testing of proxy main will become easier